
import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import Header from '../components/Header';
import { getPitchById } from '../lib/firebase'; // Function to fetch data

const GeneratedPitch = () => {
  const { id } = useParams(); // Get the pitch ID from the URL
  const navigate = useNavigate();
  
  const [pitchData, setPitchData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  // Helper function to format date
  const formatDate = (isoString) => {
    if (!isoString) return "N/A";
    return new Date(isoString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };

  // ----------------------------------------------------------------------
  // 1. Data Fetching Logic
  // ----------------------------------------------------------------------
  useEffect(() => {
    const fetchPitch = async () => {
      if (!id) {
        setError("Invalid Pitch ID.");
        setLoading(false);
        return;
      }
      try {
        const data = await getPitchById(id);
        if (data) {
          setPitchData(data);
        } else {
          setError("Pitch not found.");
        }
      } catch (err) {
        setError(err.message || "Failed to load pitch.");
      } finally {
        setLoading(false);
      }
    };
    fetchPitch();
  }, [id]); // Dependency on ID

  // Helper function to render pitch sections
  const renderSection = (title, content, color) => (
    <div className="bg-white p-6 shadow-md rounded-lg border-t-4" style={{borderColor: color}}>
      <h3 className="text-xl font-bold text-gray-800 mb-2">{title}</h3>
      <p className="text-gray-600 whitespace-pre-wrap">{content}</p>
    </div>
  );

  // ----------------------------------------------------------------------
  // 2. Export Logic (Handle Print/PDF)
  // ----------------------------------------------------------------------
  const handleExport = () => {
    if (!pitchData) return; // Prevent export if data isn't loaded
    
    // 1. Create a print-friendly window
    const printWindow = window.open('', '', 'height=600,width=800');
    
    // 2. Format the content for printing
    const printContent = `
      <style>
        body { font-family: Arial, sans-serif; padding: 20px; line-height: 1.6; }
        h1 { color: #4F46E5; border-bottom: 2px solid #E0E0E0; padding-bottom: 10px; }
        h2 { color: #1F2937; margin-top: 30px; border-left: 5px solid #4F46E5; padding-left: 10px; }
        p { margin-bottom: 15px; white-space: pre-wrap; }
        .tagline { color: #34D399; font-style: italic; font-size: 1.2em; }
      </style>
      
      <h1>PitchCraft: ${pitchData.pitchName}</h1>
      <p class="tagline">"${pitchData.tagline}"</p>
      
      <h2>🚀 Elevator Pitch</h2>
      <p>${pitchData.pitch}</p>
      
      <h2>🔥 Problem Statement</h2>
      <p>${pitchData.problemStatement}</p>
      
      <h2>💡 Solution Statement</h2>
      <p>${pitchData.solutionStatement}</p>
      
      <h2>🎯 Target Audience Persona</h2>
      <p>${pitchData.targetAudience}</p>
      
      <h2>💻 Website Hero Section Copy</h2>
      <p>${pitchData.landingCopy}</p>
      
      <p style="margin-top: 40px; font-size: 0.8em; color: #9CA3AF;">
        Generated by PitchCraft AI on ${formatDate(pitchData.createdAt)}
      </p>
    `;

    // 3. Write and print
    printWindow.document.write(printContent);
    printWindow.document.close();
    printWindow.print();
  };

  // ----------------------------------------------------------------------
  // 3. Conditional Rendering (Loading/Error/Success)
  // ----------------------------------------------------------------------
  if (loading) return (
    <div className="min-h-screen flex items-center justify-center">
      <p className="text-indigo-600">Loading pitch data... ⏳</p>
    </div>
  );
  if (error) return (
    <div className="min-h-screen bg-gray-50 pt-20 text-center">
      <p className="text-red-600 text-lg font-medium">{error}</p>
      <button onClick={() => navigate('/dashboard')} className="mt-4 text-indigo-600 hover:underline">
        Go to Dashboard
      </button>
    </div>
  );

  // ----------------------------------------------------------------------
  // 4. Main Display JSX
  // ----------------------------------------------------------------------
  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <main className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
        <div className="text-center mb-8">
          <span className="inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800">
            {pitchData.industry} | {pitchData.tone} Tone
          </span>
          <h1 className="text-4xl font-extrabold text-gray-900 mt-2">
            {pitchData.pitchName}
          </h1>
          <p className="text-xl text-indigo-600 mt-2 font-semibold">
            "{pitchData.tagline}"
          </p>
        </div>

        <div className="space-y-6">
          {renderSection("🚀 Elevator Pitch (Investor Summary)", pitchData.pitch, '#4F46E5')} 
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {renderSection("🔥 Problem Statement", pitchData.problemStatement, '#EF4444')}
            {renderSection("💡 Solution Statement", pitchData.solutionStatement, '#10B981')}
          </div>
          
          {renderSection("🎯 Target Audience Persona", pitchData.targetAudience, '#F59E0B')}
          
          {renderSection("💻 Website Hero Section Copy", pitchData.landingCopy, '#3B82F6')}
        </div>
        
        {/* Action Buttons */}
        <div className="mt-10 flex justify-center space-x-4">
            <button 
              onClick={handleExport}
              className="px-6 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-red-600 hover:bg-red-700 shadow-md transition duration-150"
            >
                Export (Print/PDF) 🖨️
            </button>
            <button 
              onClick={() => navigate('/dashboard')} 
              className="px-6 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100 transition duration-150"
            >
                Go to Dashboard
            </button>
        </div>
      </main>
    </div>
  );
};

export default GeneratedPitch;